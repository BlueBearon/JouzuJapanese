That's a good idea! Storing your data in XML files and then parsing them into objects as needed is a common practice and can make your code more manageable and scalable. 

Here's a basic example of how you might structure your XML file for a `RuVerb`:

```xml
<RuVerbs>
    <RuVerb>
        <kanji>食べる</kanji>
        <hiragana>たべる</hiragana>
        <romanji>taberu</romanji>
        <meaning>to eat</meaning>
    </RuVerb>
    <!-- More RuVerbs here -->
</RuVerbs>
```

You can then use a library like `javax.xml.parsers` to parse the XML file and create `RuVerb` objects. Here's a basic example of how you might do this:

```java
DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
DocumentBuilder builder = factory.newDocumentBuilder();
Document doc = builder.parse(new File("path_to_your_file.xml"));

NodeList ruVerbNodes = doc.getElementsByTagName("RuVerb");

for (int i = 0; i < ruVerbNodes.getLength(); i++) {
    Node node = ruVerbNodes.item(i);

    if (node.getNodeType() == Node.ELEMENT_NODE) {
        Element ruVerbElement = (Element) node;

        String kanji = ruVerbElement.getElementsByTagName("kanji").item(0).getTextContent();
        String hiragana = ruVerbElement.getElementsByTagName("hiragana").item(0).getTextContent();
        String romanji = ruVerbElement.getElementsByTagName("romanji").item(0).getTextContent();
        String meaning = ruVerbElement.getElementsByTagName("meaning").item(0).getTextContent();

        RuVerb ruVerb = new RuVerb(kanji, hiragana, romanji, meaning);
        // Add ruVerb to a list or use it as needed
    }
}
```

This code creates a `DocumentBuilder` which is used to parse the XML file into a `Document`. It then gets a list of all `RuVerb` nodes in the document and loops through them. For each `RuVerb` node, it gets the text content of the `kanji`, `hiragana`, `romanji`, and `meaning` elements and uses them to create a new `RuVerb` object.

You would need to adjust this code to fit your specific needs, such as handling errors and adding the created `RuVerb` objects to a list or other data structure. You would also need to repeat this process for your `UVerb`, `IAdjective`, and `NaAdjective` objects, adjusting the tag names as needed.